// Generated by Dagger (https://google.github.io/dagger).
package com.suitmedia.bundle.sample.di.module;

import com.suitmedia.bundle.sample.data.api.APIService;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class APIServiceModule_ApiServiceFactory implements Factory<APIService> {
  private final APIServiceModule module;

  private final Provider<Retrofit> retrofitProvider;

  public APIServiceModule_ApiServiceFactory(
      APIServiceModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public APIService get() {
    return Preconditions.checkNotNull(
        module.apiService(retrofitProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static APIServiceModule_ApiServiceFactory create(
      APIServiceModule module, Provider<Retrofit> retrofitProvider) {
    return new APIServiceModule_ApiServiceFactory(module, retrofitProvider);
  }

  public static APIService proxyApiService(APIServiceModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(
        instance.apiService(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
